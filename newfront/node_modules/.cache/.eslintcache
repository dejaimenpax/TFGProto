[{"C:\\Users\\jaime\\TFGProto\\newfront\\src\\index.js":"1","C:\\Users\\jaime\\TFGProto\\newfront\\src\\App.js":"2","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\auth.service.js":"3","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Register.js":"4","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Home.js":"5","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Login.js":"6","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Profile.js":"7","C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\EventBus.js":"8","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\Resolver.js":"9","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\user.service.js":"10","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Roles.js":"11","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\SelectTopic.js":"12","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\auth-header.js":"13","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\exercise.service.js":"14","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\ExerciseCard.js":"15","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\InputBox.js":"16","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\TriangleExercise.js":"17","C:\\Users\\jaime\\TFGProto\\newfront\\src\\serviceWorker.js":"18","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\StatsPage.js":"19","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Username.js":"20","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\BlockButtons.js":"21","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\gestion.service.js":"22","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\ConfigureExercises.js":"23","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\User\\BoardUser.js":"24","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Teacher\\BoardTeacher.js":"25","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\BoardGestion.js":"26","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Teacher\\SearchStudents.js":"27","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\ListaUsuarios.js":"28","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\CrearUsuario.js":"29","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\ModificarUsuario.js":"30","C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\Encryption.js":"31","C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\Config.js":"32","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Ranking.js":"33"},{"size":494,"mtime":1696626660268,"results":"34","hashOfConfig":"35"},{"size":5521,"mtime":1700990054649,"results":"36","hashOfConfig":"35"},{"size":4533,"mtime":1700990054667,"results":"37","hashOfConfig":"35"},{"size":8120,"mtime":1700990054664,"results":"38","hashOfConfig":"35"},{"size":1480,"mtime":1688749886186,"results":"39","hashOfConfig":"35"},{"size":3636,"mtime":1688418944475,"results":"40","hashOfConfig":"35"},{"size":2760,"mtime":1698006753183,"results":"41","hashOfConfig":"35"},{"size":327,"mtime":1648460424000,"results":"42","hashOfConfig":"35"},{"size":1838,"mtime":1700990054649,"results":"43","hashOfConfig":"35"},{"size":635,"mtime":1689525906191,"results":"44","hashOfConfig":"35"},{"size":602,"mtime":1698006753183,"results":"45","hashOfConfig":"35"},{"size":7058,"mtime":1702577269338,"results":"46","hashOfConfig":"35"},{"size":251,"mtime":1673980009499,"results":"47","hashOfConfig":"35"},{"size":813,"mtime":1689618396715,"results":"48","hashOfConfig":"35"},{"size":2341,"mtime":1704032229224,"results":"49","hashOfConfig":"35"},{"size":304,"mtime":1693512688496,"results":"50","hashOfConfig":"35"},{"size":3387,"mtime":1704032229224,"results":"51","hashOfConfig":"35"},{"size":5086,"mtime":1685894980193,"results":"52","hashOfConfig":"35"},{"size":5316,"mtime":1702577436829,"results":"53","hashOfConfig":"35"},{"size":233,"mtime":1698006753183,"results":"54","hashOfConfig":"35"},{"size":1357,"mtime":1701969365853,"results":"55","hashOfConfig":"35"},{"size":2162,"mtime":1700990054667,"results":"56","hashOfConfig":"35"},{"size":5579,"mtime":1702577268638,"results":"57","hashOfConfig":"35"},{"size":1064,"mtime":1692045915870,"results":"58","hashOfConfig":"35"},{"size":1084,"mtime":1692045915863,"results":"59","hashOfConfig":"35"},{"size":13046,"mtime":1700990054667,"results":"60","hashOfConfig":"35"},{"size":2279,"mtime":1692045915867,"results":"61","hashOfConfig":"35"},{"size":5420,"mtime":1700990054667,"results":"62","hashOfConfig":"35"},{"size":3932,"mtime":1700990054667,"results":"63","hashOfConfig":"35"},{"size":1671,"mtime":1696797088017,"results":"64","hashOfConfig":"35"},{"size":1019,"mtime":1698006753183,"results":"65","hashOfConfig":"35"},{"size":72,"mtime":1706030121640,"results":"66","hashOfConfig":"35"},{"size":6433,"mtime":1701257606918,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u5l3o1",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jaime\\TFGProto\\newfront\\src\\index.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\App.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\auth.service.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Register.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Home.js",["171"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../assets/matemapi_logo.png\";\r\nimport \"../styles/Home.css\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <div className=\"container text-center\">\r\n          <img src={logo} alt=\"Logo\" className=\"mb-4\"/>\r\n          <h2 className=\"display-4\">Bienvenido a MatemAPI</h2>\r\n          <p className=\"lead\">MatemAPI es una app web para el correcto aprendizaje de ejercicios de matemáticas de nivel escolar (tercer ciclo).</p>\r\n          <p>\r\n            <Link to={\"/resolver\"} className=\"btn btn-custom btn-lg\">Comenzar &raquo;</Link>\r\n          </p>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Login.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Profile.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\EventBus.js",[],[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\Resolver.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\user.service.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Roles.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\SelectTopic.js",["172"],[],"import React, { useState, useEffect, useRef} from \"react\";\r\nimport UserService from \"../../services/user.service\";\r\nimport ExerciseService from \"../../services/exercise.service\";\r\nimport EventBus from \"../../common/EventBus\";\r\nimport ExerciseCard from \"./ExerciseCard\";\r\nimport InputBox from \"./InputBox\";\r\nimport BlockButtons from \"./BlockButtons\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport '../../styles/Exercises/SelectTopic.css';\r\n\r\nconst SelectTopic = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [exerciseInput, setExerciseInput] = useState([]);\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseSelected, setExerciseSelected] = useState(false);\r\n  const [exerciseResolved, setExerciseResolved] = useState(false);\r\n  const [inputFilled, setInputFilled] = useState(false);\r\n  const [disableInput, setDisableInput] = useState(false);\r\n  const [showForbiddenInput, setShowForbiddenInput] = useState(false);\r\n\r\n  const exerciseCardRef = useRef(null);\r\n\r\n  const handleSelect = (id_bloque) => {\r\n    console.log(\"Entró en handleSelect con el id_bloque\", id_bloque);\r\n    ExerciseService.createExercise(id_bloque)\r\n      .then((response) => {\r\n        console.log(\"Lo que recibe como ejercicio es\", response.data);\r\n\r\n        // Check if the response is a string\r\n        if (typeof response.data === 'string') {\r\n          // If it's a string, set the exerciseSelected to false\r\n          setExerciseSelected(false);\r\n          setExercise(response.data); // Set the received string as the exercise\r\n        } else {\r\n          setExercise(response.data);\r\n          setExerciseSelected(true);\r\n          setExerciseInput(Array.from({ length: response.data.long_input }, () => \"\"));\r\n          setExerciseResolved(false);\r\n          setInputFilled(false);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error creating exercise:\", error));\r\n\r\n      exerciseCardRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleInput = (input) => {\r\n    if (!disableInput){\r\n      if (input.every((value) => value !== \"\")) {\r\n        const currentUser = AuthService.getCurrentUser();\r\n        console.log(\"Lo que envia como ejercicio es\", exercise);\r\n        ExerciseService.resolveExercise(exercise, input, currentUser.username)\r\n          .then((response) => {\r\n            setExercise(response.data);\r\n            setExerciseResolved(true);\r\n            setInputFilled(false);\r\n          })\r\n          .catch((error) => console.error(\"Error resolving exercise:\", error));\r\n      } else {\r\n        setInputFilled(true);\r\n      }\r\n    } else {\r\n      setShowForbiddenInput(true);\r\n      setTimeout(() => {\r\n        setShowForbiddenInput(false); // Mantén el flag activo\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (value, index) => {\r\n    const newExerciseInput = [...exerciseInput];\r\n    newExerciseInput[index] = value;\r\n    setExerciseInput(newExerciseInput);\r\n\r\n    // Comprueba si algo del exerciseInput tiene algo que no sean numeros reales positivos\r\n    let hasForbiddenCharacters = newExerciseInput.some(item => !/^\\d+(,\\d*)?$/.test(item) || item.startsWith(',') || item.endsWith(','));\r\n    setDisableInput(hasForbiddenCharacters);\r\n    setShowForbiddenInput(hasForbiddenCharacters);\r\n    setTimeout(() => {\r\n      setShowForbiddenInput(false); // Mantén el flag activo\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className= \"container mb-4\">\r\n      <h3 className=\"text-center mb-4\">Resolver ejercicios</h3>\r\n      <p> </p>\r\n      <BlockButtons handleSelect={handleSelect} />\r\n      <p></p>\r\n      {exerciseSelected && (\r\n        <>\r\n          {exercise.mensaje ? (\r\n            <p className=\"text-center\">\r\n              {exercise.mensaje}\r\n            </p>\r\n          ) : (\r\n            <>\r\n              <div ref={exerciseCardRef}></div><ExerciseCard exercise={exercise}/>\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                {exerciseInput.map((value, index) => (\r\n                  <div key={index} className=\"input-container d-flex flex-column\">\r\n\r\n                    <label className=\"input-label\">\r\n                      {exercise.etiquetas[index]}\r\n                    </label>\r\n\r\n                    <InputBox index={index} value={value} onChange={handleInputChange} />\r\n\r\n                    {inputFilled && value === \"\" && (\r\n                      <div className=\"input-error alert alert-danger mt-1 mb-1\">\r\n                        Introduce un valor\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {exerciseResolved && ( \r\n                      exercise.explicacion[index].includes(\"<ol>\") ? (\r\n                        <div\r\n                          className={`input-feedback alert ${exercise.explicacion[index].includes(\"!\") ? \"alert-success\" : \"alert-danger\"}`}\r\n                          dangerouslySetInnerHTML={{ __html: exercise.explicacion[index] }}\r\n                        />\r\n                      ) : (\r\n                        <div\r\n                          className={`input-feedback alert ${exercise.explicacion[index].includes(\"!\") ? \"alert-success\" : \"alert-danger\"} text-center`}\r\n                        >\r\n                          {exercise.explicacion[index]}\r\n                        </div>\r\n                      )\r\n                    )}\r\n\r\n\r\n                  </div>\r\n                ))}\r\n\r\n                {showForbiddenInput && (\r\n                  <div className=\"input-error alert alert-danger mt-1 mb-1\">\r\n                    Por favor, introduce solo números reales positivos.\r\n                  </div>\r\n                )}\r\n                \r\n                {exerciseResolved ? (\r\n                  <p className=\"text-center\">Con este ejercicio has obtenido {exercise.nota.toString().replace('.',',')} puntos.</p>\r\n                ):<></>}\r\n\r\n                {exerciseResolved ? (\r\n                  <button className=\"btn btn-custom mt-2\" onClick={() => handleSelect(parseInt(exercise.id_tema.toString()[0]))}>\r\n                    Generar nuevo ejercicio del bloque\r\n                  </button>\r\n                ) : (\r\n                  <button \r\n                    className=\"btn btn-custom mt-2\" \r\n                    onClick={() => handleInput(exerciseInput)}\r\n                  >\r\n                    Resolver ejercicio\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectTopic;","C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\auth-header.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\exercise.service.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\ExerciseCard.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\InputBox.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\TriangleExercise.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\serviceWorker.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\StatsPage.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Profile\\Username.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\BlockButtons.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\services\\gestion.service.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\Exercises\\ConfigureExercises.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\User\\BoardUser.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Teacher\\BoardTeacher.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\BoardGestion.js",["173"],[],"import React, { useState, useEffect } from \"react\";\r\nimport AuthService from \"../../../services/auth.service\";\r\nimport GestionService from \"../../../services/gestion.service\";\r\nimport \"../../../styles/UserBoards/BoardGestion.css\";\r\nimport EventBus from \"../../../common/EventBus\";\r\nimport ListaUsuarios from \"./ListaUsuarios\";\r\nimport CrearUsuario from \"./CrearUsuario\";\r\nimport ModificarUsuario from \"./ModificarUsuario\";\r\n\r\nimport { decrypt, encrypt } from \"../../../common/Encryption\";\r\nimport { encryptionKey } from \"../../../common/Config\";\r\n\r\nconst BoardGestion = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [content, setContent] = useState();\r\n  const [user, setUser] = useState(null);\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    teacher: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const [teachers, setTeachers] = useState([]);\r\n  const [showTeacherInput, setShowTeacherInput] = useState(false)\r\n  const [generalErrorMessage, setGeneralErrorMessage] = useState()\r\n\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(\"\");\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\r\n\r\n  const [teacherCode, setTeacherCode] = useState(\"\")\r\n  const [teacherNotFoundError, setTeacherNotFoundError] = useState(false);\r\n\r\n  const [showCreateUserModal, setShowCreateUserModal] = useState(false);\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n  const [successfulRegister, setSuccessfulRegister] = useState(false);\r\n\r\n  const [showResetPasswordModal, setShowResetPasswordModal] = useState(false);\r\n  const [resetMessage, setResetMessage] = useState(\"\");\r\n  const [successfulReset, setSuccessfulReset] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    AuthService.getCurrentUserFromDB()\r\n      .then((response) => {\r\n        setUser(response.data);\r\n        getUsersExceptAdmins(response.data.username);\r\n        fetchTeachers(response.data.username);\r\n\r\n        if (response.data.username===response.data.teacher){\r\n          setNewUser({\r\n            username: \"\",\r\n            password: \"\",\r\n            teacher: response.data.teacher,\r\n            role: \"user\",\r\n          })\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n    });\r\n  }, []);\r\n\r\n  const getUsersExceptAdmins = (username) => {\r\n    GestionService.getUsersExceptAdmins(username)\r\n      .then((response) => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const fetchTeachers = (username) => {\r\n    GestionService.getTeachers(username)\r\n      .then((response) => {\r\n        setTeachers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleSearchTermChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n\r\n  const handleNewUserChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    // Perform validation checks and set error messages\r\n    if (name === 'username') {\r\n      if (value.length < 6 || value.length > 40) {\r\n        setUsernameErrorMessage('El nombre de usuario debe tener entre 6 y 40 caracteres.');\r\n      } else {\r\n        setUsernameErrorMessage('');\r\n      }\r\n    }\r\n  \r\n    if (name === 'password') {\r\n      if (value.length < 6 || value.length > 40) {\r\n        setPasswordErrorMessage('La contraseña debe tener entre 6 y 40 caracteres.');\r\n      } else {\r\n        setPasswordErrorMessage('');\r\n      }\r\n    }\r\n  \r\n    setNewUser({\r\n      ...newUser,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  \r\n  const handleRoleChange = (e) => {\r\n    e.target.value===\"teacher\" ?\r\n      setShowTeacherInput(false)\r\n      :\r\n      setShowTeacherInput(true)\r\n\r\n    setNewUser({\r\n      ...newUser,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n  const createUser = () => {\r\n\r\n    setRegisterMessage(\"\");\r\n    setSuccessfulRegister(false);\r\n\r\n    if (!newUser.username || (!newUser.role && user.teacher!==user.username) || !newUser.password || (!newUser.teacher && newUser.role===\"user\")){\r\n      setGeneralErrorMessage(\"Recuerda rellenar todos los campos.\")\r\n      setTimeout(() => {\r\n        setGeneralErrorMessage(null)\r\n      }, 3000);\r\n      return;\r\n    } else {\r\n      setGeneralErrorMessage(null)\r\n    }\r\n\r\n    if (usernameErrorMessage!==\"\" || passwordErrorMessage!==\"\")\r\n      return;\r\n\r\n    if (user.teacher===user.username){\r\n      setNewUser({\r\n        ...newUser,\r\n        teacher: user.teacher,\r\n        role: \"user\"\r\n      })\r\n      console.log(\"Ha detectado que es un profesor registrando y va a registrar a esto: \", newUser)\r\n    } else if (!teachers.includes(decrypt(teacherCode, encryptionKey)) && newUser.role!==\"teacher\"){\r\n      return;\r\n    }\r\n\r\n    AuthService.register(newUser.username, newUser.password, newUser.teacher === \"\" ? newUser.username : newUser.teacher, newUser.role)\r\n      .then(\r\n        (response) => {\r\n          setRegisterMessage(response.data.message);\r\n          setSuccessfulRegister(true);\r\n          // Mostrar la contraseña generada\r\n          alert(\"Creado usuario \" + newUser.username + \" con contraseña \" + newUser.password + \". Cópiala para mandársela al usuario.\");\r\n          // Actualizar la lista de usuarios después de crear uno\r\n          getUsersExceptAdmins(user.username);\r\n          //Asi como la de profes\r\n          fetchTeachers(user.username);\r\n          // Restablecer los campos del nuevo usuario\r\n          setNewUser({\r\n            username: \"\",\r\n            password: \"\",\r\n            teacher: \"\",\r\n            role: \"\",\r\n          });\r\n          setTeacherCode(\"\")\r\n\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n          setRegisterMessage(resMessage);\r\n          setSuccessfulRegister(false);\r\n        })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n      setTimeout(() => {\r\n        setRegisterMessage(\"\")\r\n      }, 6000);\r\n\r\n  };\r\n\r\n  const filterUsers = () => {\r\n    // Primero, filtramos por término de búsqueda\r\n    const filteredUsers = users.filter((user) =>\r\n      user.username.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  \r\n    // Divide la lista en profesores y alumnos\r\n    const teachersAux = filteredUsers.filter((user) => user.roles[0].name === \"teacher\");\r\n    const studentsAux = filteredUsers.filter((user) => user.roles[0].name !== \"teacher\");\r\n  \r\n    // Ordena alfabéticamente por username\r\n    teachersAux.sort((a, b) => a.username.localeCompare(b.username));\r\n    studentsAux.sort((a, b) => a.username.localeCompare(b.username));\r\n  \r\n    // Inicializa un array para la lista ordenada\r\n    const sortedUsers = []\r\n\r\n    if (teachersAux.length===0){ //si no hay profesores\r\n      return studentsAux;\r\n    }\r\n\r\n    // Itera por cada profesor y sus alumnos\r\n\r\n    let professorStudents = []\r\n    for (const element of teachersAux) {\r\n      sortedUsers.push(element);\r\n      professorStudents = studentsAux.filter((student) => student.teacher === element.username);\r\n      professorStudents.sort((a, b) => a.username.localeCompare(b.username));\r\n      sortedUsers.push(...professorStudents);\r\n    }\r\n  \r\n    return sortedUsers;\r\n  };\r\n  \r\n  const deleteUser = (us) => {\r\n    let confirmMessage =\r\n      \"¿Estás seguro de borrar al usuario? Esta acción no se puede deshacer.\";\r\n\r\n    if (us.roles[0].name.includes(\"teacher\")) {\r\n      confirmMessage +=\r\n        \" Esta acción también eliminará a sus alumnos asociados.\";\r\n    }\r\n\r\n    const confirmDelete = window.confirm(confirmMessage);\r\n\r\n    if (confirmDelete) {\r\n      GestionService.deleteAccountByUsername(us.username)\r\n        .then(() => {\r\n          // Actualizar la lista de usuarios después de borrar uno\r\n          getUsersExceptAdmins(user.username);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleCreateUserModalOpen = () => {\r\n    setShowCreateUserModal(true);\r\n  };\r\n\r\n  const handleCreateUserModalClose = () => {\r\n    setShowCreateUserModal(false);\r\n  };\r\n\r\n  const handlePasswordChange = (usname) => {\r\n    setNewUser({\r\n      username: usname,\r\n      password: \"\",\r\n      teacher: \"\",\r\n      role: \"\",\r\n    })\r\n  }\r\n\r\n  const onChangeTeacherCode = (e) => {\r\n    const code = e.target.value; //coge el codigo introducido\r\n    setTeacherCode(code)\r\n    setNewUser({\r\n      ...newUser,\r\n      teacher: decrypt(code, encryptionKey), //desencripta ese codigo y obtiene el teachername\r\n    })\r\n    setTeacherNotFoundError(!teachers.includes(newUser.teacher))\r\n  };\r\n\r\n  const handleResetPasswordModalOpen = () => {\r\n    setShowResetPasswordModal(true);\r\n  };\r\n\r\n  const handleResetPasswordModalClose = () => {\r\n    setShowResetPasswordModal(false);\r\n    setNewUser({\r\n      username: \"\",\r\n      password: \"\",\r\n      teacher: \"\",\r\n      role: \"\",\r\n    })\r\n  };\r\n\r\n  const resetPassword = () => {\r\n\r\n    setResetMessage(\"\");\r\n    setSuccessfulReset(false);\r\n\r\n    if (!newUser.password){\r\n      setGeneralErrorMessage(\"Recuerda escribir una contraseña.\")\r\n      return;\r\n    } else {\r\n      setGeneralErrorMessage(null)\r\n    }\r\n  \r\n    GestionService.restorePassword(newUser.username, newUser.password)\r\n      .then(\r\n        (response) => {\r\n          setResetMessage(response.data.message);\r\n          setSuccessfulReset(true);\r\n          // Mostrar la contraseña generada\r\n          alert(\"Modificada la contraseña de \" + newUser.username + \". La nueva contraseña es \" + newUser.password + \". Cópiala para mandársela al usuario.\");\r\n\r\n          // Restablecer los campos del nuevo usuario\r\n          setNewUser({\r\n            ...newUser,\r\n            password: \"\",\r\n          });\r\n\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n          setResetMessage(resMessage);\r\n          setSuccessfulReset(false);\r\n        })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n      setTimeout(() => {\r\n        setResetMessage(\"\")\r\n      }, 6000);\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          {showCreateUserModal ? (\r\n            <div className=\"board-gestion\">\r\n              <CrearUsuario\r\n                user={user}\r\n                newUser={newUser}\r\n                handleNewUserChange={handleNewUserChange}\r\n                handleRoleChange={handleRoleChange}\r\n                teachers={teachers}\r\n                generalErrorMessage={generalErrorMessage}\r\n                createUser={createUser}\r\n                showTeacherInput={showTeacherInput}\r\n                handleCreateUserModalClose={handleCreateUserModalClose}\r\n                successfulRegister={successfulRegister}\r\n                registerMessage={registerMessage}\r\n                usernameErrorMessage={usernameErrorMessage}\r\n                passwordErrorMessage={passwordErrorMessage}\r\n                teacherCode={teacherCode}\r\n                onChangeTeacherCode={onChangeTeacherCode}\r\n                teacherNotFoundError={teacherNotFoundError}\r\n              />\r\n            </div>\r\n          ) : showResetPasswordModal ? (\r\n            <div className=\"board-gestion\">\r\n              <ModificarUsuario \r\n                newUser={newUser}\r\n                handleNewUserChange={handleNewUserChange}\r\n                passwordErrorMessage={passwordErrorMessage}\r\n                handleResetPasswordModalClose={handleResetPasswordModalClose}\r\n                resetPassword={resetPassword}\r\n                successfulReset={successfulReset}\r\n                resetMessage={resetMessage}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"board-gestion\">\r\n              <ListaUsuarios\r\n                searchTerm={searchTerm}\r\n                handleSearchTermChange={handleSearchTermChange}\r\n                deleteUser={deleteUser}\r\n                filterUsers={filterUsers}\r\n                handleCreateUserModalOpen={handleCreateUserModalOpen}     \r\n                handleResetPasswordModalOpen={handleResetPasswordModalOpen}\r\n                handleResetPasswordModalClose={handleResetPasswordModalClose}\r\n                showResetPasswordModal={showResetPasswordModal}\r\n                handlePasswordChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <h3>{content}</h3>\r\n      )}\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default BoardGestion;","C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Teacher\\SearchStudents.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\ListaUsuarios.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\CrearUsuario.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Gestion\\ModificarUsuario.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\Encryption.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\common\\Config.js",[],[],"C:\\Users\\jaime\\TFGProto\\newfront\\src\\components\\UserBoards\\Ranking.js",[],[],{"ruleId":"174","severity":1,"message":"175","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":13,"column":10,"nodeType":"176","messageId":"177","endLine":13,"endColumn":17},{"ruleId":"174","severity":1,"message":"178","line":10,"column":19,"nodeType":"176","messageId":"177","endLine":10,"endColumn":26},"no-unused-vars","'content' is assigned a value but never used.","Identifier","unusedVar","'encrypt' is defined but never used."]