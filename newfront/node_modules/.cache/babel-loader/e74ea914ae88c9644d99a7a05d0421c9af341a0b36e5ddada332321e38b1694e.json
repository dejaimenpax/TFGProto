{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaime\\\\TFGProto\\\\newfront\\\\src\\\\components\\\\Exercises\\\\TriangleExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TriangleExercise = _ref => {\n  _s();\n  let {\n    enunciado\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    // Establece el tamaño del canvas\n    canvas.width = 600;\n    canvas.height = 600;\n\n    // Dibuja el eje de coordenadas\n    context.beginPath();\n    context.moveTo(0, canvas.height / 2);\n    context.lineTo(canvas.width, canvas.height / 2);\n    context.moveTo(canvas.width / 2, 0);\n    context.lineTo(canvas.width / 2, canvas.height);\n    context.stroke();\n\n    // Restaura el valor predeterminado de globalAlpha\n    context.globalAlpha = 1;\n\n    //cuadricula\n    context.strokeStyle = \"#dcdcdc\"; // Establece el color de la cuadrícula\n    for (let i = -10; i <= 10; i++) {\n      // Dibuja las líneas horizontales\n      context.beginPath();\n      context.moveTo(i * 30 + canvas.width / 2, 0);\n      context.lineTo(i * 30 + canvas.width / 2, canvas.height);\n      context.stroke();\n\n      // Dibuja las líneas verticales\n      context.beginPath();\n      context.moveTo(0, -i * 30 + canvas.height / 2);\n      context.lineTo(canvas.width, -i * 30 + canvas.height / 2);\n      context.stroke();\n    }\n\n    // Escala los puntos de los triángulos\n    const scale = canvas.width / 20; // factor de escala\n    const scaledEnunciado = enunciado.map(triangle => triangle.map(point => [point[0] * scale, point[1] * scale]));\n\n    // Colores para cada triángulo\n    const colors = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"pink\", \"brown\"];\n\n    // Dibuja cada triángulo y sus etiquetas\n    for (let i = 0; i < scaledEnunciado.length; i++) {\n      const triangle = scaledEnunciado[i];\n\n      // Establece el color del triángulo\n      context.fillStyle = colors[i];\n      context.beginPath();\n      context.moveTo(triangle[0][0] + canvas.width / 2, canvas.height / 2 - triangle[0][1]);\n      context.lineTo(triangle[1][0] + canvas.width / 2, canvas.height / 2 - triangle[1][1]);\n      context.lineTo(triangle[2][0] + canvas.width / 2, canvas.height / 2 - triangle[2][1]);\n      context.closePath();\n\n      // Aplica la transparencia solo a los triángulos\n      context.globalAlpha = 0.5;\n      context.fill();\n      context.stroke();\n\n      // Añade etiquetas a los vértices\n      for (let j = 0; j < 3; j++) {\n        const point = triangle[j];\n        context.fillText(`(${point[0] / 30}, ${point[1] / 30})`, point[0] + canvas.width / 2 + 5, canvas.height / 2 - point[1] - 5);\n      }\n    }\n    for (let i = -10; i <= 10; i++) {\n      context.fillStyle = \"#000000\"; // Establece el color en negro\n      context.fillText(i.toString(), i * scale + canvas.width / 2, canvas.height / 2 + 10);\n      context.fillText(i.toString(), canvas.width / 2 - 10, -i * scale + canvas.height / 2);\n    }\n  }, [enunciado]); // Agrega enunciado como dependencia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(TriangleExercise, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = TriangleExercise;\nexport default TriangleExercise;\nvar _c;\n$RefreshReg$(_c, \"TriangleExercise\");","map":{"version":3,"names":["React","useEffect","useRef","TriangleExercise","enunciado","canvasRef","canvas","current","context","getContext","width","height","beginPath","moveTo","lineTo","stroke","globalAlpha","strokeStyle","i","scale","scaledEnunciado","map","triangle","point","colors","length","fillStyle","closePath","fill","j","fillText","toString"],"sources":["C:/Users/jaime/TFGProto/newfront/src/components/Exercises/TriangleExercise.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst TriangleExercise = ({ enunciado }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    // Establece el tamaño del canvas\r\n    canvas.width = 600;\r\n    canvas.height = 600;\r\n\r\n    // Dibuja el eje de coordenadas\r\n    context.beginPath();\r\n    context.moveTo(0, canvas.height / 2);\r\n    context.lineTo(canvas.width, canvas.height / 2);\r\n    context.moveTo(canvas.width / 2, 0);\r\n    context.lineTo(canvas.width / 2, canvas.height);\r\n    context.stroke();\r\n\r\n    // Restaura el valor predeterminado de globalAlpha\r\n    context.globalAlpha = 1;\r\n\r\n    //cuadricula\r\n    context.strokeStyle = \"#dcdcdc\"; // Establece el color de la cuadrícula\r\n    for (let i = -10; i <= 10; i++) {\r\n      // Dibuja las líneas horizontales\r\n      context.beginPath();\r\n      context.moveTo(i * 30 + canvas.width / 2, 0);\r\n      context.lineTo(i * 30 + canvas.width / 2, canvas.height);\r\n      context.stroke();\r\n\r\n      // Dibuja las líneas verticales\r\n      context.beginPath();\r\n      context.moveTo(0, -i * 30 + canvas.height / 2);\r\n      context.lineTo(canvas.width, -i * 30 + canvas.height / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    // Escala los puntos de los triángulos\r\n    const scale = canvas.width / 20; // factor de escala\r\n    const scaledEnunciado = enunciado.map((triangle) =>\r\n      triangle.map((point) => [point[0] * scale, point[1] * scale])\r\n    );\r\n\r\n    // Colores para cada triángulo\r\n    const colors = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"pink\", \"brown\"];\r\n\r\n    // Dibuja cada triángulo y sus etiquetas\r\n    for (let i = 0; i < scaledEnunciado.length; i++) {\r\n      const triangle = scaledEnunciado[i];\r\n\r\n      // Establece el color del triángulo\r\n      context.fillStyle = colors[i];\r\n\r\n      context.beginPath();\r\n      context.moveTo(\r\n        triangle[0][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[0][1]\r\n      );\r\n      context.lineTo(\r\n        triangle[1][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[1][1]\r\n      );\r\n      context.lineTo(\r\n        triangle[2][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[2][1]\r\n      );\r\n      context.closePath();\r\n\r\n      // Aplica la transparencia solo a los triángulos\r\n      context.globalAlpha = 0.5;\r\n      context.fill();\r\n\r\n      context.stroke();\r\n\r\n      // Añade etiquetas a los vértices\r\n      for (let j = 0; j < 3; j++) {\r\n        const point = triangle[j];\r\n        context.fillText(\r\n          `(${point[0] / 30}, ${point[1] / 30})`,\r\n          point[0] + canvas.width / 2 + 5,\r\n          canvas.height / 2 - point[1] - 5\r\n        );\r\n      }\r\n    }\r\n\r\n    for (let i = -10; i <= 10; i++) {\r\n      context.fillStyle = \"#000000\"; // Establece el color en negro\r\n      context.fillText(i.toString(), i * scale + canvas.width / 2, canvas.height / 2 + 10);\r\n      context.fillText(i.toString(), canvas.width / 2 - 10, -i * scale + canvas.height / 2);\r\n    }\r\n  }, [enunciado]); // Agrega enunciado como dependencia\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TriangleExercise;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}