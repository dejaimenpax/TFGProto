{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://tfgjaimeback.fly.dev/api/auth/\";\nconst register = (email, password, teacher, role) => {\n  return axios.post(API_URL + \"signup\", {\n    email,\n    password,\n    teacher,\n    role\n  });\n};\nconst login = (email, password) => {\n  return axios.post(API_URL + \"signin\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n    return response.data;\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst getCurrentUserFromDB = () => {\n  const user = getCurrentUser();\n  if (user && user.accessToken) {\n    console.log(\"Entra al getCurrentuserFromDB\");\n    return axios.get(API_URL + \"user\", {\n      headers: {\n        \"x-access-token\": user.accessToken\n      }\n    });\n  } else {\n    return Promise.reject(new Error(\"User not found or token expired\"));\n  }\n};\nconst getTeachers = () => {\n  return axios.get(API_URL + \"teachers\");\n};\nconst getMyStudents = () => {\n  const user = getCurrentUser();\n  if (user && user.accessToken) {\n    return axios.get(API_URL + \"students\", {\n      headers: {\n        \"x-access-token\": user.accessToken\n      }\n    });\n  } else {\n    return Promise.reject(new Error(\"User not found or token expired\"));\n  }\n};\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getCurrentUserFromDB,\n  getTeachers,\n  getMyStudents\n};\nexport default AuthService;","map":{"version":3,"names":["axios","API_URL","register","email","password","teacher","role","post","login","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","getCurrentUserFromDB","user","console","log","get","headers","Promise","reject","Error","getTeachers","getMyStudents","AuthService"],"sources":["C:/Users/jaime/TFGProto/newfront/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://tfgjaimeback.fly.dev/api/auth/\";\r\n\r\nconst register = (email, password, teacher, role) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    email,\r\n    password,\r\n    teacher,\r\n    role,\r\n  });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst getCurrentUserFromDB = () => {\r\n  const user = getCurrentUser();\r\n  if (user && user.accessToken) {\r\n    console.log(\"Entra al getCurrentuserFromDB\")\r\n    return axios.get(API_URL + \"user\", {\r\n      headers: { \"x-access-token\": user.accessToken },\r\n    });\r\n  } else {\r\n    return Promise.reject(new Error(\"User not found or token expired\"));\r\n  }\r\n};\r\n\r\nconst getTeachers = () => {\r\n  return axios.get(API_URL + \"teachers\");\r\n}\r\n\r\nconst getMyStudents = () => {\r\n  const user = getCurrentUser();\r\n  if (user && user.accessToken) {\r\n    return axios.get(API_URL + \"students\", {\r\n      headers: { \"x-access-token\": user.accessToken },\r\n    });\r\n  } else {\r\n    return Promise.reject(new Error(\"User not found or token expired\"));\r\n  }\r\n}\r\n\r\nconst AuthService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getCurrentUserFromDB,\r\n  getTeachers,\r\n  getMyStudents,\r\n};\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wCAAwC;AAExD,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,KAAK;EACnD,OAAON,KAAK,CAACO,IAAI,CAACN,OAAO,GAAG,QAAQ,EAAE;IACpCE,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,KAAK,GAAG,CAACL,KAAK,EAAEC,QAAQ,KAAK;EACjC,OAAOJ,KAAK,CACTO,IAAI,CAACN,OAAO,GAAG,QAAQ,EAAE;IACxBE,KAAK;IACLC;EACF,CAAC,CAAC,CACDK,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;MAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC7D;IAEA,OAAOD,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC;AACN,CAAC;AAED,MAAMM,MAAM,GAAG,MAAM;EACnBJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,cAAc,GAAG,MAAM;EAC3B,OAAOJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAM;EACjC,MAAMC,IAAI,GAAGJ,cAAc,EAAE;EAC7B,IAAII,IAAI,IAAIA,IAAI,CAACX,WAAW,EAAE;IAC5BY,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,OAAOzB,KAAK,CAAC0B,GAAG,CAACzB,OAAO,GAAG,MAAM,EAAE;MACjC0B,OAAO,EAAE;QAAE,gBAAgB,EAAEJ,IAAI,CAACX;MAAY;IAChD,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOgB,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,iCAAiC,CAAC,CAAC;EACrE;AACF,CAAC;AAED,MAAMC,WAAW,GAAG,MAAM;EACxB,OAAO/B,KAAK,CAAC0B,GAAG,CAACzB,OAAO,GAAG,UAAU,CAAC;AACxC,CAAC;AAED,MAAM+B,aAAa,GAAG,MAAM;EAC1B,MAAMT,IAAI,GAAGJ,cAAc,EAAE;EAC7B,IAAII,IAAI,IAAIA,IAAI,CAACX,WAAW,EAAE;IAC5B,OAAOZ,KAAK,CAAC0B,GAAG,CAACzB,OAAO,GAAG,UAAU,EAAE;MACrC0B,OAAO,EAAE;QAAE,gBAAgB,EAAEJ,IAAI,CAACX;MAAY;IAChD,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOgB,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,iCAAiC,CAAC,CAAC;EACrE;AACF,CAAC;AAED,MAAMG,WAAW,GAAG;EAClB/B,QAAQ;EACRM,KAAK;EACLS,MAAM;EACNE,cAAc;EACdG,oBAAoB;EACpBS,WAAW;EACXC;AACF,CAAC;AAED,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}