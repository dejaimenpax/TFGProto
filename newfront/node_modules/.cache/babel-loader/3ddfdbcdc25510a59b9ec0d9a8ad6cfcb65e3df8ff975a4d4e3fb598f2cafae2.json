{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var TriangleExercise=function TriangleExercise(_ref){var enunciado=_ref.enunciado;var canvasRef=useRef(null);useEffect(function(){var canvas=canvasRef.current;var context=canvas.getContext(\"2d\");// Establece el tamaño del canvas\ncanvas.width=600;canvas.height=600;// Dibuja el eje de coordenadas\ncontext.beginPath();context.moveTo(0,canvas.height/2);context.lineTo(canvas.width,canvas.height/2);context.moveTo(canvas.width/2,0);context.lineTo(canvas.width/2,canvas.height);context.stroke();//cuadricula\ncontext.strokeStyle=\"#dcdcdc\";// Establece el color de la cuadrícula\nfor(var i=-10;i<=10;i++){// Dibuja las líneas horizontales\ncontext.beginPath();context.moveTo(i*30+canvas.width/2,0);context.lineTo(i*30+canvas.width/2,canvas.height);context.stroke();// Dibuja las líneas verticales\ncontext.beginPath();context.moveTo(0,-i*30+canvas.height/2);context.lineTo(canvas.width,-i*30+canvas.height/2);context.stroke();}// Escala los puntos de los triángulos\nvar scale=canvas.width/20;// factor de escala\nvar scaledEnunciado=enunciado.map(function(triangle){return triangle.map(function(point){return[point[0]*scale,point[1]*scale];});});// Colores para cada triángulo\nvar colors=[\"red\",\"blue\",\"green\",\"orange\",\"purple\",\"pink\",\"brown\"];// Dibuja cada triángulo y sus etiquetas\nfor(var _i=0;_i<scaledEnunciado.length;_i++){var triangle=scaledEnunciado[_i];// Establece el color del triángulo\ncontext.fillStyle=colors[_i];context.beginPath();context.moveTo(triangle[0][0]+canvas.width/2,canvas.height/2-triangle[0][1]);context.lineTo(triangle[1][0]+canvas.width/2,canvas.height/2-triangle[1][1]);context.lineTo(triangle[2][0]+canvas.width/2,canvas.height/2-triangle[2][1]);context.closePath();// Aplica la transparencia solo a los triángulos\ncontext.globalAlpha=0.5;context.fill();// Restaura el valor predeterminado de globalAlpha\ncontext.globalAlpha=1;context.stroke();// Añade etiquetas a los vértices\nfor(var j=0;j<3;j++){var point=triangle[j];context.fillText(\"(\".concat(point[0]/30,\", \").concat(point[1]/30,\")\"),point[0]+canvas.width/2+5,canvas.height/2-point[1]-5);}}for(var _i2=-10;_i2<=10;_i2++){context.fillStyle=\"#000000\";// Establece el color en negro\ncontext.fillText(_i2.toString(),_i2*scale+canvas.width/2,canvas.height/2+10);context.fillText(_i2.toString(),canvas.width/2-10,-_i2*scale+canvas.height/2);}});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef})});};export default TriangleExercise;","map":{"version":3,"names":["React","useEffect","useRef","TriangleExercise","enunciado","canvasRef","canvas","current","context","getContext","width","height","beginPath","moveTo","lineTo","stroke","strokeStyle","i","scale","scaledEnunciado","map","triangle","point","colors","length","fillStyle","closePath","globalAlpha","fill","j","fillText","toString"],"sources":["C:/Users/jaime/TFGProto/newfront/src/components/Exercises/TriangleExercise.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst TriangleExercise = ({ enunciado }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    // Establece el tamaño del canvas\r\n    canvas.width = 600;\r\n    canvas.height = 600;\r\n\r\n    // Dibuja el eje de coordenadas\r\n    context.beginPath();\r\n    context.moveTo(0, canvas.height / 2);\r\n    context.lineTo(canvas.width, canvas.height / 2);\r\n    context.moveTo(canvas.width / 2, 0);\r\n    context.lineTo(canvas.width / 2, canvas.height);\r\n    context.stroke();\r\n\r\n    //cuadricula\r\n    context.strokeStyle = \"#dcdcdc\"; // Establece el color de la cuadrícula\r\n    for (let i = -10; i <= 10; i++) {\r\n      // Dibuja las líneas horizontales\r\n      context.beginPath();\r\n      context.moveTo(i * 30 + canvas.width / 2, 0);\r\n      context.lineTo(i * 30 + canvas.width / 2, canvas.height);\r\n      context.stroke();\r\n\r\n      // Dibuja las líneas verticales\r\n      context.beginPath();\r\n      context.moveTo(0, -i * 30 + canvas.height / 2);\r\n      context.lineTo(canvas.width, -i * 30 + canvas.height / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    // Escala los puntos de los triángulos\r\n    const scale = canvas.width / 20; // factor de escala\r\n    const scaledEnunciado = enunciado.map((triangle) =>\r\n      triangle.map((point) => [point[0] * scale, point[1] * scale])\r\n    );\r\n\r\n    // Colores para cada triángulo\r\n    const colors = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"pink\", \"brown\"];\r\n\r\n    // Dibuja cada triángulo y sus etiquetas\r\n    for (let i = 0; i < scaledEnunciado.length; i++) {\r\n      const triangle = scaledEnunciado[i];\r\n\r\n      // Establece el color del triángulo\r\n      context.fillStyle = colors[i];\r\n\r\n      context.beginPath();\r\n      context.moveTo(\r\n        triangle[0][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[0][1]\r\n      );\r\n      context.lineTo(\r\n        triangle[1][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[1][1]\r\n      );\r\n      context.lineTo(\r\n        triangle[2][0] + canvas.width / 2,\r\n        canvas.height / 2 - triangle[2][1]\r\n      );\r\n      context.closePath();\r\n\r\n      // Aplica la transparencia solo a los triángulos\r\n      context.globalAlpha = 0.5;\r\n      context.fill();\r\n      // Restaura el valor predeterminado de globalAlpha\r\n      context.globalAlpha = 1;\r\n\r\n      context.stroke();\r\n\r\n      // Añade etiquetas a los vértices\r\n      for (let j = 0; j < 3; j++) {\r\n        const point = triangle[j];\r\n        context.fillText(\r\n          `(${point[0] / 30}, ${point[1] / 30})`,\r\n          point[0] + canvas.width / 2 + 5,\r\n          canvas.height / 2 - point[1] - 5\r\n        );\r\n      }\r\n    }\r\n\r\n    for (let i = -10; i <= 10; i++) {\r\n      context.fillStyle = \"#000000\"; // Establece el color en negro\r\n      context.fillText(i.toString(), i * scale + canvas.width / 2, canvas.height / 2 + 10);\r\n      context.fillText(i.toString(), canvas.width / 2 - 10, -i * scale + canvas.height / 2);\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default TriangleExercise;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}