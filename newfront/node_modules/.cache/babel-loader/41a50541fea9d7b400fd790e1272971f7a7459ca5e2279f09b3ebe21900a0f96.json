{"ast":null,"code":"import axios from\"axios\";import authHeader from\"./auth-header\";var API_URL=\"/api/gestion/\";var getCurrentUser=function getCurrentUser(){return JSON.parse(localStorage.getItem(\"user\"));};var deleteAccountByUsername=function deleteAccountByUsername(username){console.log(\"Entra al deleteAccountByUsername\");var user=getCurrentUser();if(user&&user.accessToken){return axios.delete(API_URL+\"delete-account-byUsername\",{headers:authHeader(),data:{username:username}}).then(function(response){return response.data;}).catch(function(error){console.error(\"Error borrando la cuenta:\",error);throw error;});}else{return Promise.reject(new Error(\"Usuario no encontrado o token expirado.\"));}};var getAllUsersExceptAdmins=function getAllUsersExceptAdmins(){console.log(\"Entra al getAllUsersExceptAdmins\");return axios.get(API_URL+\"all-users\",{headers:authHeader()});};var getStudentsForGestion=function getStudentsForGestion(){console.log(\"Entra al getStudentsForGestion\");return axios.get(API_URL+\"students-for-gestion\",{headers:authHeader()});};var getListElement=function getListElement(username){console.log(\"Entra al getListElement Service\");return axios.get(API_URL+\"getListElement\",{headers:authHeader(),data:{username:username}});};var GestionService={getAllUsersExceptAdmins:getAllUsersExceptAdmins,deleteAccountByUsername:deleteAccountByUsername,getStudentsForGestion:getStudentsForGestion,getListElement:getListElement};export default GestionService;","map":{"version":3,"names":["axios","authHeader","API_URL","getCurrentUser","JSON","parse","localStorage","getItem","deleteAccountByUsername","username","console","log","user","accessToken","delete","headers","data","then","response","catch","error","Promise","reject","Error","getAllUsersExceptAdmins","get","getStudentsForGestion","getListElement","GestionService"],"sources":["C:/Users/jaime/TFGProto/newfront/src/services/gestion.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/api/gestion/\";\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\n\r\nconst deleteAccountByUsername = (username) => {\r\n  console.log(\"Entra al deleteAccountByUsername\")\r\n  const user = getCurrentUser();\r\n  if (user && user.accessToken) {\r\n    return axios\r\n      .delete(API_URL + \"delete-account-byUsername\", {\r\n        headers: authHeader(),\r\n        data: { username },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error borrando la cuenta:\", error);\r\n        throw error;\r\n      });\r\n  } else {\r\n    return Promise.reject(new Error(\"Usuario no encontrado o token expirado.\"));\r\n  }\r\n};\r\n\r\nconst getAllUsersExceptAdmins = () => {\r\n  console.log(\"Entra al getAllUsersExceptAdmins\")\r\n  return axios.get(API_URL + \"all-users\", { headers: authHeader() });\r\n};\r\n\r\nconst getStudentsForGestion = () => {\r\n  console.log(\"Entra al getStudentsForGestion\")\r\n  return axios.get(API_URL + \"students-for-gestion\", { headers: authHeader() });\r\n};\r\n\r\nconst getListElement = (username) => {\r\n  console.log(\"Entra al getListElement Service\")\r\n  return axios.get(API_URL + \"getListElement\", {\r\n    headers: authHeader(),\r\n    data: { username },\r\n  })\r\n}\r\n\r\nconst GestionService = {\r\n  getAllUsersExceptAdmins,\r\n  deleteAccountByUsername,\r\n  getStudentsForGestion,\r\n  getListElement,\r\n};\r\n\r\nexport default GestionService;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,WAAU,KAAM,eAAe,CAEtC,GAAMC,QAAO,CAAG,eAAe,CAE/B,GAAMC,eAAc,CAAG,QAAjBA,eAAc,EAAS,CAC3B,MAAOC,KAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACjD,CAAC,CAGD,GAAMC,wBAAuB,CAAG,QAA1BA,wBAAuB,CAAIC,QAAQ,CAAK,CAC5CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,GAAMC,KAAI,CAAGT,cAAc,EAAE,CAC7B,GAAIS,IAAI,EAAIA,IAAI,CAACC,WAAW,CAAE,CAC5B,MAAOb,MAAK,CACTc,MAAM,CAACZ,OAAO,CAAG,2BAA2B,CAAE,CAC7Ca,OAAO,CAAEd,UAAU,EAAE,CACrBe,IAAI,CAAE,CAAEP,QAAQ,CAARA,QAAS,CACnB,CAAC,CAAC,CACDQ,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,MAAOA,SAAQ,CAACF,IAAI,CACtB,CAAC,CAAC,CACDG,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBV,OAAO,CAACU,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAMA,MAAK,CACb,CAAC,CAAC,CACN,CAAC,IAAM,CACL,MAAOC,QAAO,CAACC,MAAM,CAAC,GAAIC,MAAK,CAAC,yCAAyC,CAAC,CAAC,CAC7E,CACF,CAAC,CAED,GAAMC,wBAAuB,CAAG,QAA1BA,wBAAuB,EAAS,CACpCd,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,MAAOX,MAAK,CAACyB,GAAG,CAACvB,OAAO,CAAG,WAAW,CAAE,CAAEa,OAAO,CAAEd,UAAU,EAAG,CAAC,CAAC,CACpE,CAAC,CAED,GAAMyB,sBAAqB,CAAG,QAAxBA,sBAAqB,EAAS,CAClChB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7C,MAAOX,MAAK,CAACyB,GAAG,CAACvB,OAAO,CAAG,sBAAsB,CAAE,CAAEa,OAAO,CAAEd,UAAU,EAAG,CAAC,CAAC,CAC/E,CAAC,CAED,GAAM0B,eAAc,CAAG,QAAjBA,eAAc,CAAIlB,QAAQ,CAAK,CACnCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9C,MAAOX,MAAK,CAACyB,GAAG,CAACvB,OAAO,CAAG,gBAAgB,CAAE,CAC3Ca,OAAO,CAAEd,UAAU,EAAE,CACrBe,IAAI,CAAE,CAAEP,QAAQ,CAARA,QAAS,CACnB,CAAC,CAAC,CACJ,CAAC,CAED,GAAMmB,eAAc,CAAG,CACrBJ,uBAAuB,CAAvBA,uBAAuB,CACvBhB,uBAAuB,CAAvBA,uBAAuB,CACvBkB,qBAAqB,CAArBA,qBAAqB,CACrBC,cAAc,CAAdA,cACF,CAAC,CAED,cAAeC,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}