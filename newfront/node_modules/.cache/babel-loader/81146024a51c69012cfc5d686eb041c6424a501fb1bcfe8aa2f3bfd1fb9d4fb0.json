{"ast":null,"code":"import _objectSpread from\"C:/Users/jaime/TFGProto/newfront/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/jaime/TFGProto/newfront/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import ExerciseService from\"../../services/exercise.service\";import\"../../styles/Exercises/ConfigureExercises.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConfigureExercises=function ConfigureExercises(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),exercises=_useState2[0],setExercises=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showSuccessMessage=_useState4[0],setShowSuccessMessage=_useState4[1];useEffect(function(){ExerciseService.getAllExercises().then(function(response){setExercises(response.data);}).catch(function(error){return console.error(\"Error loading exercises:\",error);});},[]);var handleExerciseVisibilityChange=function handleExerciseVisibilityChange(exerciseId,newVisibility){var updatedExercises=exercises.map(function(exercise){if(exercise._id===exerciseId){return _objectSpread(_objectSpread({},exercise),{},{flag_active:newVisibility});}return exercise;});setExercises(updatedExercises);};var handleSaveChanges=function handleSaveChanges(){ExerciseService.updateExercisesVisibility(exercises).then(function(response){setExercises(response.data);setShowSuccessMessage(true);// Hide success message after 3 seconds\nsetTimeout(function(){setShowSuccessMessage(false);},3000);}).catch(function(error){return console.error(\"Error updating exercise visibility:\",error);});};// Group exercises by their block (id_tema)\nvar groupedExercises=exercises.reduce(function(grouped,exercise){var block=exercise.id_tema.toString()[0];if(!grouped[block]){grouped[block]=[];}grouped[block].push(exercise);return grouped;},{});var renderSwitch=function renderSwitch(exercise){return/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-switch mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",id:\"exercise-\".concat(exercise._id),checked:exercise.flag_active,onChange:function onChange(e){return handleExerciseVisibilityChange(exercise._id,e.target.checked);}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"exercise-\".concat(exercise._id),children:exercise.name})]},exercise._id);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center mb-4\",children:\"Configurar visibilidad de ejercicios\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row row-cols-md-2 row-cols-1 g-4\",children:Object.entries(groupedExercises).map(function(_ref){var _ref2=_slicedToArray(_ref,2),block=_ref2[0],blockExercises=_ref2[1];return/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"card-title text-center\",children:[\"Bloque \",block]}),blockExercises.map(function(exercise){return renderSwitch(exercise);})]})})},block);})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,className:\"btn btn-primary btn-block mt-4\",children:\"Guardar cambios\"}),showSuccessMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success mt-4\",role:\"alert\",children:\"Se ha guardado la configuraci\\xF3n de visibilidad de los ejercicios.\"})]});};export default ConfigureExercises;","map":{"version":3,"names":["React","useState","useEffect","ExerciseService","ConfigureExercises","exercises","setExercises","showSuccessMessage","setShowSuccessMessage","getAllExercises","then","response","data","catch","error","console","handleExerciseVisibilityChange","exerciseId","newVisibility","updatedExercises","map","exercise","_id","flag_active","handleSaveChanges","updateExercisesVisibility","setTimeout","groupedExercises","reduce","grouped","block","id_tema","toString","push","renderSwitch","e","target","checked","name","Object","entries","blockExercises"],"sources":["C:/Users/jaime/TFGProto/newfront/src/components/Exercises/ConfigureExercises.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ExerciseService from \"../../services/exercise.service\";\r\nimport \"../../styles/Exercises/ConfigureExercises.css\";\r\n\r\nconst ConfigureExercises = () => {\r\n  const [exercises, setExercises] = useState([]);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    ExerciseService.getAllExercises()\r\n      .then((response) => {\r\n        setExercises(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error loading exercises:\", error));\r\n  }, []);\r\n\r\n  const handleExerciseVisibilityChange = (exerciseId, newVisibility) => {\r\n    const updatedExercises = exercises.map((exercise) => {\r\n      if (exercise._id === exerciseId) {\r\n        return { ...exercise, flag_active: newVisibility };\r\n      }\r\n      return exercise;\r\n    });\r\n    setExercises(updatedExercises);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    ExerciseService.updateExercisesVisibility(exercises)\r\n      .then((response) => {\r\n        setExercises(response.data);\r\n        setShowSuccessMessage(true);\r\n\r\n        // Hide success message after 3 seconds\r\n        setTimeout(() => {\r\n          setShowSuccessMessage(false);\r\n        }, 3000);\r\n      })\r\n      .catch((error) => console.error(\"Error updating exercise visibility:\", error));\r\n  };\r\n\r\n  // Group exercises by their block (id_tema)\r\n  const groupedExercises = exercises.reduce((grouped, exercise) => {\r\n    const block = exercise.id_tema.toString()[0];\r\n    if (!grouped[block]) {\r\n      grouped[block] = [];\r\n    }\r\n    grouped[block].push(exercise);\r\n    return grouped;\r\n  }, {});\r\n\r\n  const renderSwitch = (exercise) => {\r\n    return (\r\n      <div key={exercise._id} className=\"form-check form-switch mb-3\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id={`exercise-${exercise._id}`}\r\n          checked={exercise.flag_active}\r\n          onChange={(e) => handleExerciseVisibilityChange(exercise._id, e.target.checked)}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={`exercise-${exercise._id}`}>\r\n          {exercise.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3 className=\"text-center mb-4\">Configurar visibilidad de ejercicios</h3>\r\n      <div className=\"row row-cols-md-2 row-cols-1 g-4\">\r\n        {Object.entries(groupedExercises).map(([block, blockExercises]) => (\r\n          <div key={block} className=\"col\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\">Bloque {block}</h5>\r\n                {blockExercises.map((exercise) => renderSwitch(exercise))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSaveChanges} className=\"btn btn-primary btn-block mt-4\">\r\n        Guardar cambios\r\n      </button>\r\n      {showSuccessMessage && (\r\n        <div className=\"alert alert-success mt-4\" role=\"alert\">\r\n          Se ha guardado la configuraci√≥n de visibilidad de los ejercicios.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigureExercises;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}